
package com.hsj.object.db.cache;

import com.hsj.object.db.bean.User;
import com.hsj.object.db.cache.UserCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.Property;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;


// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "User". Can be used for QueryBuilder and for referencing DB names.
 */
public final class User_ implements EntityInfo<User> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "User";

    public static final int __ENTITY_ID = 1;

    public static final Class<User> __ENTITY_CLASS = User.class;

    public static final String __DB_NAME = "User";

    public static final CursorFactory<User> __CURSOR_FACTORY = new Factory();

    @Internal
    static final UserIdGetter __ID_GETTER = new UserIdGetter();

    public final static Property index = new Property(0, 1, Long.class, "index", true, "_id");
    public final static Property id = new Property(1, 2, String.class, "id");
    public final static Property account = new Property(2, 3, String.class, "account");
    public final static Property password = new Property(3, 4, String.class, "password");
    public final static Property userToken = new Property(4, 5, String.class, "userToken");

    public final static Property[] __ALL_PROPERTIES = {
        index,
        id,
        account,
        password,
        userToken
    };

    public final static Property __ID_PROPERTY = index;

    public final static User_ __INSTANCE = new User_();

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<User> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public Property[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public Property getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<User> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<User> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class UserIdGetter implements IdGetter<User> {
        public long getId(User object) {
            Long id = object.getIndex();
            return id != null? id : 0;
        }
    }

}
