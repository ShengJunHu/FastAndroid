package com.hsj.object.db.cache;


import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.Transaction;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import com.hsj.object.db.bean.User;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "User".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class UserCursor extends Cursor<User> {
    @Internal
    static final class Factory implements CursorFactory<User> {
        public Cursor<User> createCursor(Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new UserCursor(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final User_.UserIdGetter ID_GETTER = User_.__ID_GETTER;


    private final static int __ID_id = User_.id.id;
    private final static int __ID_account = User_.account.id;
    private final static int __ID_password = User_.password.id;
    private final static int __ID_userToken = User_.userToken.id;

    public UserCursor(Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, User_.__INSTANCE, boxStore);
    }

    @Override
    public final long getId(User entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    @Override
    public final long put(User entity) {
        Long index = entity.getIndex();
        String id = entity.getId();
        int __id1 = id != null ? __ID_id : 0;
        String account = entity.getAccount();
        int __id2 = account != null ? __ID_account : 0;
        String password = entity.getPassword();
        int __id3 = password != null ? __ID_password : 0;
        String userToken = entity.getUserToken();
        int __id4 = userToken != null ? __ID_userToken : 0;

        long __assignedId = collect400000(cursor, index != null ? index: 0, PUT_FLAG_FIRST | PUT_FLAG_COMPLETE,
                __id1, id, __id2, account,
                __id3, password, __id4, userToken);

        entity.setIndex(__assignedId);

        return __assignedId;
    }


}
