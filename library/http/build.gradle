if (rootProject.ext.android.isLibDebug){
    apply plugin:rootProject.ext.plugins.application
}else {
    apply plugin:rootProject.ext.plugins.library
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        if (rootProject.ext.android.isLibDebug){
            applicationId "com.hsj.http"
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.dependencies.testInstrumentationRunner

        ndk { abiFilters "armeabi-v7a", "x86" }
    }

    buildTypes {
        release {
            buildConfigField "String", "HOST", rootProject.ext.android.HOST
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "HOST", rootProject.ext.android.HOST
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (rootProject.ext.android.isLibDebug) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation rootProject.ext.dependencies.testJunit
    androidTestImplementation rootProject.ext.dependencies.testRunner
    androidTestImplementation rootProject.ext.dependencies.testEspresso
    implementation rootProject.ext.dependencies.appcompat_v7
    implementation rootProject.ext.dependencies.constraint_layout

    //Retrofit2
    implementation rootProject.ext.dependencies.retrofit
    //Retrofit2和RxJava2适配器
    implementation rootProject.ext.dependencies.retrofit_rxjava2
    //转换器：采用自定义FastJson转换器
    implementation rootProject.ext.dependencies.retrofit_gson
    //拦截器
    implementation rootProject.ext.dependencies.interceptor

    //RxJava2
    implementation rootProject.ext.dependencies.rxjava
    implementation rootProject.ext.dependencies.rxandroid

    //Json解析：采用FastJson解析
    implementation rootProject.ext.dependencies.gson
}
