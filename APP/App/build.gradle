apply plugin: rootProject.ext.plugins.application

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId "com.hsj"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        resourcePrefix "app_"

        // 矢量图
        vectorDrawables.useSupportLibrary = true

        //打包时筛选出这两种架构
        ndk { abiFilters "armeabi-v7a", "x86" }

        testInstrumentationRunner rootProject.ext.dependencies.testInstrumentationRunner
    }

    signingConfigs {
        config {
            keyAlias 'FastAndroid'
            keyPassword 'shengjunhu'
            storeFile file('App.jks')
            storePassword 'shengjunhu'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "App_${variant.productFlavors[0].name}_v${variant.versionName}_v${variant.versionCode}.apk"
//        }
//    }
//
//    flavorDimensions "default"
//    productFlavors {
//        server { dimension "default" }
//        huawei { dimension "default" }
//        xiaomi { dimension "default" }
//        meizu { dimension "default" }
//        oppo { dimension "default" }
//        vivo { dimension "default" }
//        baidu { dimension "default" }
//        tencent { dimension "default" }
//        _360 { dimension "default" }
//    }

    packagingOptions {
        exclude 'AndroidManifest.xml'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation rootProject.ext.dependencies.testJunit
    androidTestImplementation rootProject.ext.dependencies.testRunner
    androidTestImplementation rootProject.ext.dependencies.testEspresso

    implementation project(':Library:BaseLib')
    implementation rootProject.ext.dependencies.repluginHost
}

apply plugin: rootProject.ext.plugins.repluginHost

/**
 * 配置项均为可选配置，默认无需添加
 * 更多可选配置项参见replugin-host-gradle的RepluginConfig类
 * 可更改配置项参见 自动生成RePluginHostConfig.java
 */
repluginHostConfig {
    /**
     * 是否使用 AppCompat 库
     * 不需要个性化配置时，无需添加
     */
    useAppCompat = true
    /**
     * 背景不透明的坑的数量
     * 不需要个性化配置时，无需添加
     */
    countNotTranslucentStandard = 6
    countNotTranslucentSingleTop = 2
    countNotTranslucentSingleTask = 3
    countNotTranslucentSingleInstance = 2
}

